# Server configuration
server.port=5000

# Configuración de la base de datos H2
# CAMBIO CLAVE: Usar 'file:' en lugar de 'mem:' para persistencia
spring.datasource.url=jdbc:h2:file:./data/ra_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Propiedades de JPA (Hibernate)
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
# 'update' intentará actualizar el esquema existente o crearlo si no existe.
# 'create' borrará y recreará la base de datos en cada inicio (útil para empezar de cero).

# IMPORTANTE: Para que data.sql se ejecute *después* de que Hibernate haya creado las tablas
spring.jpa.defer-datasource-initialization=true

# Configuración de H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true
# Permite conexiones desde otras IPs (útil si Docker o VM, o si tienes problemas de conexión)

# Ejecución de scripts SQL al iniciar la aplicación
# RECOMENDACIÓN: Para que tus datos de Postman persistan sin ser sobrescritos/duplicados
# por data.sql en cada reinicio, te recomiendo cambiar 'spring.sql.init.mode' a 'never'
# una vez que el esquema inicial y los datos de prueba básicos estén cargados.
spring.sql.init.mode=embedded
# <-- Considera cambiar a 'never' o 'embedded' después de la primera carga
spring.sql.init.schema-locations=classpath:/schema.sql
spring.sql.init.data-locations=classpath:/data.sql